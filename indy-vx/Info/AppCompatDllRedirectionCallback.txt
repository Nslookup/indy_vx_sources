AppCompatDllRedirectionCallback.
Краткое описание калбэка. Может использоваться для следующих целей:
 - Нотификация загрузки модулей.
 - Запрет загрузки модуля.
 - Подмена модуля.
 - Загрузка модуля из памяти.
 - Начало трассировки загрузчика, для подмены данных и перехватов(трассировка это альтернативный способ ко
   нтроля кода).
В начале работы функции проецирующей модуль LdrpMapDll() выполняется проверка наличия калбэка AppCompatDll
RedirectionCallback и если он установлен выполняется его вызов. Функция регистрирующая калбэк экспортирует
ся как LdrSetAppCompatDllRedirectionCallback. Калбэк один, это не цепочка, указатель на него хранится в пе
ременной LdrpAppCompatDllRedirectionCallbackFunction, пользовательские данные для калбэка соответственно в 
переменной LdrpAppCompatDllRedirectionCallbackData.
Прототип:

typedef
NTSTATUS (NTAPI *PLDR_APP_COMPAT_DLL_REDIRECTION_CALLBACK_FUNCTION)(
    IN ULONG Flags,
    IN PCWSTR DllName,
    IN PCWSTR DllPath OPTIONAL,
    IN OUT PULONG DllCharacteristics OPTIONAL,
    IN PVOID CallbackData,
    OUT PWSTR *EffectiveDllPath
    );

NTSTATUS
LdrSetAppCompatDllRedirectionCallback(
    IN ULONG Flags,
    IN PLDR_APP_COMPAT_DLL_REDIRECTION_CALLBACK_FUNCTION CallbackFunction,
    IN PVOID CallbackData
    );

Первый параметр должен быть нулём, иначе функция возвратит ошибку STATUS_INVALID_PARAMETER.
Этот калбэк вызывается для замены проецируемого модуля, имя которого передаётся в LdrpMapDll() как DllName:

NTSTATUS
LdrpMapDll(
    IN PWSTR DllPath OPTIONAL,
    IN PWSTR DllName,
    IN PULONG DllCharacteristics OPTIONAL,
    IN BOOLEAN StaticLink,
    IN BOOLEAN Wx86KnownDll,
    OUT PLDR_DATA_TABLE_ENTRY *LdrDataTableEntry
    );

Если калбэк вернёт ошибку, будет послано сообщение отладчику и LdrpMapDll() возвратит эту ошибку.
Если калбэк завершится успешно, то выполняется проверка возвращенного имени. Если EffectiveDllPath нулево
й, то LdrpMapDll() продолжает исполняться нормальным путём. Иначе переменная Wx86KnownDll функции LdrpMap
Dll() устанавливается в TRUE и именем проецируемого модуля становится EffectiveDllPath.  Калбэк должен пр
оверить передаваемое имя и если это имя целевого модуля возвратить новое имя и/или выполнить дальнейшую о
бработку. В простейшем случае бработка может пойти следующими путями:
- Wx86KnownDll = TRUE.
Выполняется проверка хэндла секции(в локальной переменной) из директории \KnownDlls, и если хэндл отличен 
от нуля выполняется проецирование этой секции. Иначе выполняется проецирование модуля из файла, имя котор
ого возвратил калбэк.
- Wx86KnownDll = FALSE
Открывается секция в директории \KnownDlls с именем возвращенным калбэком. Если она существует то выполня
ется проецирование её, иначе модуль проецируется с диска.
Последовательность вызова функций, наряду с их стековыми фреймами в которых расположены локальные перемен
ные образуют цепочку стековых фреймов, которая может быть развёрнута(бактрейс). В любом месте функции рег
истр Ebp ссылается на начало текущего фрейма(конец цепочки фреймов). Для кода калбэка, если он также форм
ирует фрейм, регистр Ebp адресует переменную, в которой находится указатель на стековый фрейм вызывающей 
функции LdrpMapDll(). Посредством этого выполняется доступ к параметрам вызывающей функции и её локальным 
переменным:
 o Может быть обнулена переменная Wx86KnownDll(+0x18).
 o При проецировании модуля с диска, путь к модулю может быть установлен в переменной DllPath функции Ldr
   pMapDll()(+0x0C).
 o Может быть установлен хэндл секции в локальной переменной для проецирования (XP, -0x20).
Если выполняется загрузка хэндла секции, то после отработки загрузчика в его базе запись об модуле будет 
не полноценной, например будут обнулены поля содержащие путь к модулю и его имя, что требует поправки.